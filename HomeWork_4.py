'''Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества. 
Затем пользователь вводит сами элементы множеств.'''
import random

n = int(input("Введите количество элементов первого множества: "))
m = int(input("Введите количество элементов второго множества: "))

set1 = set()
set2 = set()

print("Сгенерированные элементы первого множества:")
for _ in range(n):
    num = random.randint(1, 20)
    set1.add(num)
    print(num, end=" ")

print("\nСгенерированные элементы второго множества:")
for _ in range(m):
    num = random.randint(1, 20)
    set2.add(num)
    print(num, end=" ")

common_elements = sorted(set1.intersection(set2))

print("\nОбщие элементы, без повторений, в порядке возрастания:")
if len(common_elements) > 0:
    for num in common_elements:
        print(num, end=" ")
else:
    print("Общих элементов не найдено")



'''
В фермерском хозяйстве в Карелии выращивают чернику. 
Она растёт на круглой грядке, причём кусты высажены только по окружности. 
Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких собирающих модулей. 
Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.
'''
# import random

# n = int(input("Введите количество кустов: "))

# # Генерируем случайные значения для количества ягод на каждом кусте
# berries = [random.randint(1, 10) for _ in range(n)]
# print(berries)
# # Добавляем первый и последний куст в конец и начало списка для учета соседей
# berries.append(berries[0])
# berries.insert(0, berries[-2])

# max_berries = 0

# # Проходим по каждому кусту, начиная с второго и заканчивая предпоследним
# for i in range(1, n+1):
#     total_berries = berries[i] + berries[i-1] + berries[i+1]
#     max_berries = max(max_berries, total_berries)


# print("Максимальное количество ягод, которое может собрать собирающий модуль: ", max_berries)


# n = int(input())
# a = list(map(int, input().split()))

# maxsum = 0

# for i in range(n):
# 	cursum = sum(a[i:i+3])
# 	if cursum > maxsum:
# 		maxsum = cursum
# if a[0] + a[-1] + a[-2] > maxsum:
# 	maxsum = a[0] + a[-1] + a[-2]
# if a[0] + a[1] + a[-1] > maxsum:
# 	maxsum = a[0] + a[1] + a[-1]

# print(maxsum)

# import random

# n = int(input("Введите количество элементов: "))

# # Генерируем случайные значения для списка
# a = [random.randint(1, 10) for _ in range(n)]
# print(a)
# max_sum = 0

# for i in range(n):
#     cursum = sum(a[i:i+3])
#     if cursum > max_sum:
#         max_sum = cursum
# if a[0] + a[-1] + a[-2] > max_sum:
#     max_sum = a[0] + a[-1] + a[-2]
# if a[0] + a[1] + a[-1] > max_sum:
#     max_sum = a[0] + a[1] + a[-1]

# print("Максимальная сумма ягод:", max_sum)
